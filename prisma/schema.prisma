// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   String                @id @default(uuid())
  email                String                @unique
  name                 String
  jobs                 Job[]
  userConnectorConfigs UserConnectorConfig[]
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
}

model Connector {
  id                   String                @id @default(uuid())
  name                 String                @unique
  host                 String
  lastSuccess          DateTime?
  status               ConnectorStatus
  healthStatus         Boolean               @default(true)
  pageSelectors        PageSelector[]
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  Job                  Job[]
  userConnectorConfigs UserConnectorConfig[] @relation("ConnectorToUserConnectorConfig")
}

model PageSelector {
  id          String    @id @default(uuid())
  urlPattern  String
  config      Json
  connectorId String
  connector   Connector @relation(fields: [connectorId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model UserConnectorConfig {
  id          String    @id @default(uuid())
  searchTerms String?
  location    String?
  level       JobLevel?
  userId      String
  connectorId String
  user        User      @relation(fields: [userId], references: [id])
  connector   Connector @relation(fields: [connectorId], references: [id], name: "ConnectorToUserConnectorConfig")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([userId, connectorId])
}

model Job {
  id           String   @id @default(uuid())
  url          String
  title        String
  source       String
  category     String?
  level        JobLevel @default(UNKNOWN)
  description  String?
  location     String?
  length       String?
  roleType     String?
  compensation String?
  company      String?
  timestamp    BigInt

  // connector fields
  connector Connector? @relation(fields: [source], references: [name])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // user fields
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

enum JobLevel {
  INTERN
  ENTRY
  MID_SENIOR
  DIRECTOR
  EXECUTIVE
  UNKNOWN
}

enum ConnectorStatus {
  ONLINE
  OFFLINE
}

enum Decision {
  UNKNOWN
  CONSIDER
  APPLY
  IGNORE
}
